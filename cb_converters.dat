case 0x00010065: win_msg->m_cubParam = sizeof(struct winSteamServersConnected_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamServersConnected_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00080066: win_msg->m_cubParam = sizeof(struct winSteamServerConnectFailure_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamServerConnectFailure_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040067: win_msg->m_cubParam = sizeof(struct winSteamServersDisconnected_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamServersDisconnected_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100071: win_msg->m_cubParam = sizeof(struct winClientGameServerDeny_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_ClientGameServerDeny_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00010075: win_msg->m_cubParam = sizeof(struct winIPCFailure_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_IPCFailure_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0001007d: win_msg->m_cubParam = sizeof(struct winLicensesUpdated_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LicensesUpdated_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0014008f: win_msg->m_cubParam = sizeof(struct winValidateAuthTicketResponse_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_ValidateAuthTicketResponse_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100098: win_msg->m_cubParam = sizeof(struct winMicroTxnAuthorizationResponse_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MicroTxnAuthorizationResponse_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0004009a: win_msg->m_cubParam = sizeof(struct winEncryptedAppTicketResponse_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_EncryptedAppTicketResponse_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000800a3: win_msg->m_cubParam = sizeof(struct winGetAuthSessionTicketResponse_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GetAuthSessionTicketResponse_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x010000a4: win_msg->m_cubParam = sizeof(struct winGameWebCallback_t_256); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GameWebCallback_t_256(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x020000a5: win_msg->m_cubParam = sizeof(struct winStoreAuthURLResponse_t_512); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_StoreAuthURLResponse_t_512(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0130: win_msg->m_cubParam = sizeof(struct winPersonaStateChange_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_PersonaStateChange_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0001014b: win_msg->m_cubParam = sizeof(struct winGameOverlayActivated_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GameOverlayActivated_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0080014c: win_msg->m_cubParam = sizeof(struct winGameServerChangeRequested_t_128); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GameServerChangeRequested_t_128(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0010014d: win_msg->m_cubParam = sizeof(struct winGameLobbyJoinRequested_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GameLobbyJoinRequested_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0014014e: win_msg->m_cubParam = sizeof(struct winAvatarImageLoaded_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_AvatarImageLoaded_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0010014f: win_msg->m_cubParam = sizeof(struct winClanOfficerListResponse_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_ClanOfficerListResponse_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0150: win_msg->m_cubParam = sizeof(struct winFriendRichPresenceUpdate_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_FriendRichPresenceUpdate_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x01080151: win_msg->m_cubParam = sizeof(struct winGameRichPresenceJoinRequested_t_264); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GameRichPresenceJoinRequested_t_264(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140152: win_msg->m_cubParam = sizeof(struct winGameConnectedClanChatMsg_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GameConnectedClanChatMsg_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100153: win_msg->m_cubParam = sizeof(struct winGameConnectedChatJoin_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GameConnectedChatJoin_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00120154: win_msg->m_cubParam = sizeof(struct winGameConnectedChatLeave_t_18); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GameConnectedChatLeave_t_18(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00010155: win_msg->m_cubParam = sizeof(struct winDownloadClanActivityCountsResult_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_DownloadClanActivityCountsResult_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0156: win_msg->m_cubParam = sizeof(struct winJoinClanChatRoomCompletionResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_JoinClanChatRoomCompletionResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0157: win_msg->m_cubParam = sizeof(struct winGameConnectedFriendChatMsg_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GameConnectedFriendChatMsg_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100158: win_msg->m_cubParam = sizeof(struct winFriendsGetFollowerCount_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_FriendsGetFollowerCount_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100159: win_msg->m_cubParam = sizeof(struct winFriendsIsFollowing_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_FriendsIsFollowing_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x019c015a: win_msg->m_cubParam = sizeof(struct winFriendsEnumerateFollowingList_t_412); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_FriendsEnumerateFollowingList_t_412(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0008015b: win_msg->m_cubParam = sizeof(struct winSetPersonaNameResponse_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SetPersonaNameResponse_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000102bd: win_msg->m_cubParam = sizeof(struct winIPCountry_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_IPCountry_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000102be: win_msg->m_cubParam = sizeof(struct winLowBatteryPower_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LowBatteryPower_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001002bf: win_msg->m_cubParam = sizeof(struct winSteamAPICallCompleted_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamAPICallCompleted_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000102c0: win_msg->m_cubParam = sizeof(struct winSteamShutdown_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamShutdown_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000402c1: win_msg->m_cubParam = sizeof(struct winCheckFileSignature_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_CheckFileSignature_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000802ca: win_msg->m_cubParam = sizeof(struct winGamepadTextInputDismissed_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GamepadTextInputDismissed_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001c01f6: win_msg->m_cubParam = sizeof(struct winFavoritesListChanged_t_28); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_FavoritesListChanged_t_28(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001801f7: win_msg->m_cubParam = sizeof(struct winLobbyInvite_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyInvite_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001401f8: win_msg->m_cubParam = sizeof(struct winLobbyEnter_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyEnter_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001401f9: win_msg->m_cubParam = sizeof(struct winLobbyDataUpdate_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyDataUpdate_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001c01fa: win_msg->m_cubParam = sizeof(struct winLobbyChatUpdate_t_28); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyChatUpdate_t_28(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001801fb: win_msg->m_cubParam = sizeof(struct winLobbyChatMsg_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyChatMsg_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001801fd: win_msg->m_cubParam = sizeof(struct winLobbyGameCreated_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyGameCreated_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000401fe: win_msg->m_cubParam = sizeof(struct winLobbyMatchList_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyMatchList_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140200: win_msg->m_cubParam = sizeof(struct winLobbyKicked_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyKicked_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0201: win_msg->m_cubParam = sizeof(struct winLobbyCreated_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyCreated_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00090203: win_msg->m_cubParam = sizeof(struct winPSNGameBootInviteResult_t_9); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_PSNGameBootInviteResult_t_9(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040204: win_msg->m_cubParam = sizeof(struct winFavoritesListAccountsUpdated_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_FavoritesListAccountsUpdated_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0515: win_msg->m_cubParam = sizeof(struct winRemoteStorageAppSyncedClient_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageAppSyncedClient_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0516: win_msg->m_cubParam = sizeof(struct winRemoteStorageAppSyncedServer_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageAppSyncedServer_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x01180517: win_msg->m_cubParam = sizeof(struct winRemoteStorageAppSyncProgress_t_280); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageAppSyncProgress_t_280(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00080519: win_msg->m_cubParam = sizeof(struct winRemoteStorageAppSyncStatusCheck_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageAppSyncStatusCheck_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0110051b: win_msg->m_cubParam = sizeof(struct winRemoteStorageFileShareResult_t_272); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageFileShareResult_t_272(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0010051d: win_msg->m_cubParam = sizeof(struct winRemoteStoragePublishFileResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStoragePublishFileResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c051f: win_msg->m_cubParam = sizeof(struct winRemoteStorageDeletePublishedFileResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageDeletePublishedFileResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x019c0520: win_msg->m_cubParam = sizeof(struct winRemoteStorageEnumerateUserPublishedFilesResult_t_412); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageEnumerateUserPublishedFilesResult_t_412(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0521: win_msg->m_cubParam = sizeof(struct winRemoteStorageSubscribePublishedFileResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageSubscribePublishedFileResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x02640522: win_msg->m_cubParam = sizeof(struct winRemoteStorageEnumerateUserSubscribedFilesResult_t_612); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageEnumerateUserSubscribedFilesResult_t_612(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0523: win_msg->m_cubParam = sizeof(struct winRemoteStorageUnsubscribePublishedFileResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageUnsubscribePublishedFileResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100524: win_msg->m_cubParam = sizeof(struct winRemoteStorageUpdatePublishedFileResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageUpdatePublishedFileResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x01200525: win_msg->m_cubParam = sizeof(struct winRemoteStorageDownloadUGCResult_t_288); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageDownloadUGCResult_t_288(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x26140526: win_msg->m_cubParam = sizeof(struct winRemoteStorageGetPublishedFileDetailsResult_t_9748); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageGetPublishedFileDetailsResult_t_9748(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x026c0527: win_msg->m_cubParam = sizeof(struct winRemoteStorageEnumerateWorkshopFilesResult_t_620); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageEnumerateWorkshopFilesResult_t_620(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001c0528: win_msg->m_cubParam = sizeof(struct winRemoteStorageGetPublishedItemVoteDetailsResult_t_28); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageGetPublishedItemVoteDetailsResult_t_28(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0529: win_msg->m_cubParam = sizeof(struct winRemoteStoragePublishedFileSubscribed_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStoragePublishedFileSubscribed_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c052a: win_msg->m_cubParam = sizeof(struct winRemoteStoragePublishedFileUnsubscribed_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStoragePublishedFileUnsubscribed_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c052b: win_msg->m_cubParam = sizeof(struct winRemoteStoragePublishedFileDeleted_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStoragePublishedFileDeleted_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c052c: win_msg->m_cubParam = sizeof(struct winRemoteStorageUpdateUserPublishedItemVoteResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageUpdateUserPublishedItemVoteResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0010052d: win_msg->m_cubParam = sizeof(struct winRemoteStorageUserVoteDetails_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageUserVoteDetails_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x019c052e: win_msg->m_cubParam = sizeof(struct winRemoteStorageEnumerateUserSharedWorkshopFilesResult_t_412); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageEnumerateUserSharedWorkshopFilesResult_t_412(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0010052f: win_msg->m_cubParam = sizeof(struct winRemoteStorageSetUserPublishedFileActionResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageSetUserPublishedFileActionResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x02680530: win_msg->m_cubParam = sizeof(struct winRemoteStorageEnumeratePublishedFilesByUserActionResult_t_616); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageEnumeratePublishedFilesByUserActionResult_t_616(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0531: win_msg->m_cubParam = sizeof(struct winRemoteStoragePublishFileProgress_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStoragePublishFileProgress_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140532: win_msg->m_cubParam = sizeof(struct winRemoteStoragePublishedFileUpdated_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStoragePublishedFileUpdated_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040533: win_msg->m_cubParam = sizeof(struct winRemoteStorageFileWriteAsyncComplete_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageFileWriteAsyncComplete_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140534: win_msg->m_cubParam = sizeof(struct winRemoteStorageFileReadAsyncComplete_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageFileReadAsyncComplete_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0014044d: win_msg->m_cubParam = sizeof(struct winUserStatsReceived_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_UserStatsReceived_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c044e: win_msg->m_cubParam = sizeof(struct winUserStatsStored_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_UserStatsStored_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0094044f: win_msg->m_cubParam = sizeof(struct winUserAchievementStored_t_148); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_UserAchievementStored_t_148(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0450: win_msg->m_cubParam = sizeof(struct winLeaderboardFindResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LeaderboardFindResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140451: win_msg->m_cubParam = sizeof(struct winLeaderboardScoresDownloaded_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LeaderboardScoresDownloaded_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001c0452: win_msg->m_cubParam = sizeof(struct winLeaderboardScoreUploaded_t_28); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LeaderboardScoreUploaded_t_28(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00080453: win_msg->m_cubParam = sizeof(struct winNumberOfCurrentPlayers_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_NumberOfCurrentPlayers_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00080454: win_msg->m_cubParam = sizeof(struct winUserStatsUnloaded_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_UserStatsUnloaded_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00900455: win_msg->m_cubParam = sizeof(struct winUserAchievementIconFetched_t_144); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_UserAchievementIconFetched_t_144(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0456: win_msg->m_cubParam = sizeof(struct winGlobalAchievementPercentagesReady_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GlobalAchievementPercentagesReady_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0457: win_msg->m_cubParam = sizeof(struct winLeaderboardUGCSet_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LeaderboardUGCSet_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140458: win_msg->m_cubParam = sizeof(struct winPS3TrophiesInstalled_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_PS3TrophiesInstalled_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0458: win_msg->m_cubParam = sizeof(struct winGlobalStatsReceived_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GlobalStatsReceived_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000403ed: win_msg->m_cubParam = sizeof(struct winDlcInstalled_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_DlcInstalled_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000803f0: win_msg->m_cubParam = sizeof(struct winRegisterActivationCodeResponse_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RegisterActivationCodeResponse_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000103f6: win_msg->m_cubParam = sizeof(struct winNewLaunchQueryParameters_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_NewLaunchQueryParameters_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00fc03fd: win_msg->m_cubParam = sizeof(struct winAppProofOfPurchaseKeyResponse_t_252); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_AppProofOfPurchaseKeyResponse_t_252(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x002403ff: win_msg->m_cubParam = sizeof(struct winFileDetailsResult_t_36); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_FileDetailsResult_t_36(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000804b2: win_msg->m_cubParam = sizeof(struct winP2PSessionRequest_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_P2PSessionRequest_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000904b3: win_msg->m_cubParam = sizeof(struct winP2PSessionConnectFail_t_9); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_P2PSessionConnectFail_t_9(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001404b1: win_msg->m_cubParam = sizeof(struct winSocketStatusCallback_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SocketStatusCallback_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000808fd: win_msg->m_cubParam = sizeof(struct winScreenshotReady_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_ScreenshotReady_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000108fe: win_msg->m_cubParam = sizeof(struct winScreenshotRequested_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_ScreenshotRequested_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00010fa1: win_msg->m_cubParam = sizeof(struct winPlaybackStatusHasChanged_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_PlaybackStatusHasChanged_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040fa2: win_msg->m_cubParam = sizeof(struct winVolumeHasChanged_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_VolumeHasChanged_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00011005: win_msg->m_cubParam = sizeof(struct winMusicPlayerRemoteWillActivate_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerRemoteWillActivate_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00011006: win_msg->m_cubParam = sizeof(struct winMusicPlayerRemoteWillDeactivate_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerRemoteWillDeactivate_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00011007: win_msg->m_cubParam = sizeof(struct winMusicPlayerRemoteToFront_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerRemoteToFront_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00011008: win_msg->m_cubParam = sizeof(struct winMusicPlayerWillQuit_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerWillQuit_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00011009: win_msg->m_cubParam = sizeof(struct winMusicPlayerWantsPlay_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerWantsPlay_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0001100a: win_msg->m_cubParam = sizeof(struct winMusicPlayerWantsPause_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerWantsPause_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0001100b: win_msg->m_cubParam = sizeof(struct winMusicPlayerWantsPlayPrevious_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerWantsPlayPrevious_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0001100c: win_msg->m_cubParam = sizeof(struct winMusicPlayerWantsPlayNext_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerWantsPlayNext_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0001100d: win_msg->m_cubParam = sizeof(struct winMusicPlayerWantsShuffled_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerWantsShuffled_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0001100e: win_msg->m_cubParam = sizeof(struct winMusicPlayerWantsLooped_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerWantsLooped_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040fab: win_msg->m_cubParam = sizeof(struct winMusicPlayerWantsVolume_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerWantsVolume_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040fac: win_msg->m_cubParam = sizeof(struct winMusicPlayerSelectsQueueEntry_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerSelectsQueueEntry_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040fad: win_msg->m_cubParam = sizeof(struct winMusicPlayerSelectsPlaylistEntry_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerSelectsPlaylistEntry_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00041012: win_msg->m_cubParam = sizeof(struct winMusicPlayerWantsPlayingRepeatStatus_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_MusicPlayerWantsPlayingRepeatStatus_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00180835: win_msg->m_cubParam = sizeof(struct winHTTPRequestCompleted_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTTPRequestCompleted_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0836: win_msg->m_cubParam = sizeof(struct winHTTPRequestHeadersReceived_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTTPRequestHeadersReceived_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140837: win_msg->m_cubParam = sizeof(struct winHTTPRequestDataReceived_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTTPRequestDataReceived_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00180d49: win_msg->m_cubParam = sizeof(struct winSteamUGCQueryCompleted_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamUGCQueryCompleted_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x26280d4a: win_msg->m_cubParam = sizeof(struct winSteamUGCRequestUGCDetailsResult_t_9768); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamUGCRequestUGCDetailsResult_t_9768(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100d4b: win_msg->m_cubParam = sizeof(struct winCreateItemResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_CreateItemResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100d4c: win_msg->m_cubParam = sizeof(struct winSubmitItemUpdateResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SubmitItemUpdateResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0d4d: win_msg->m_cubParam = sizeof(struct winItemInstalled_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_ItemInstalled_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100d4e: win_msg->m_cubParam = sizeof(struct winDownloadItemResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_DownloadItemResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100d4f: win_msg->m_cubParam = sizeof(struct winUserFavoriteItemsListChanged_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_UserFavoriteItemsListChanged_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100d50: win_msg->m_cubParam = sizeof(struct winSetUserItemVoteResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SetUserItemVoteResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100d51: win_msg->m_cubParam = sizeof(struct winGetUserItemVoteResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GetUserItemVoteResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040d52: win_msg->m_cubParam = sizeof(struct winStartPlaytimeTrackingResult_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_StartPlaytimeTrackingResult_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040d53: win_msg->m_cubParam = sizeof(struct winStopPlaytimeTrackingResult_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_StopPlaytimeTrackingResult_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140d54: win_msg->m_cubParam = sizeof(struct winAddUGCDependencyResult_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_AddUGCDependencyResult_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140d55: win_msg->m_cubParam = sizeof(struct winRemoveUGCDependencyResult_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoveUGCDependencyResult_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100d56: win_msg->m_cubParam = sizeof(struct winAddAppDependencyResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_AddAppDependencyResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100d57: win_msg->m_cubParam = sizeof(struct winRemoveAppDependencyResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoveAppDependencyResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00940d58: win_msg->m_cubParam = sizeof(struct winGetAppDependenciesResult_t_148); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GetAppDependenciesResult_t_148(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0d59: win_msg->m_cubParam = sizeof(struct winDeleteItemResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_DeleteItemResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040f3d: win_msg->m_cubParam = sizeof(struct winSteamAppInstalled_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamAppInstalled_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040f3e: win_msg->m_cubParam = sizeof(struct winSteamAppUninstalled_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamAppUninstalled_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00041195: win_msg->m_cubParam = sizeof(struct winHTML_BrowserReady_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_BrowserReady_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00301196: win_msg->m_cubParam = sizeof(struct winHTML_NeedsPaint_t_48); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_NeedsPaint_t_48(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00141197: win_msg->m_cubParam = sizeof(struct winHTML_StartRequest_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_StartRequest_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00041198: win_msg->m_cubParam = sizeof(struct winHTML_CloseBrowser_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_CloseBrowser_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00181199: win_msg->m_cubParam = sizeof(struct winHTML_URLChanged_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_URLChanged_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c119a: win_msg->m_cubParam = sizeof(struct winHTML_FinishedRequest_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_FinishedRequest_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0008119b: win_msg->m_cubParam = sizeof(struct winHTML_OpenLinkInNewTab_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_OpenLinkInNewTab_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0008119c: win_msg->m_cubParam = sizeof(struct winHTML_ChangedTitle_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_ChangedTitle_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c119d: win_msg->m_cubParam = sizeof(struct winHTML_SearchResults_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_SearchResults_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0008119e: win_msg->m_cubParam = sizeof(struct winHTML_CanGoBackAndForward_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_CanGoBackAndForward_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0018119f: win_msg->m_cubParam = sizeof(struct winHTML_HorizontalScroll_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_HorizontalScroll_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001811a0: win_msg->m_cubParam = sizeof(struct winHTML_VerticalScroll_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_VerticalScroll_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001411a1: win_msg->m_cubParam = sizeof(struct winHTML_LinkAtPosition_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_LinkAtPosition_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000811a2: win_msg->m_cubParam = sizeof(struct winHTML_JSAlert_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_JSAlert_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000811a3: win_msg->m_cubParam = sizeof(struct winHTML_JSConfirm_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_JSConfirm_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c11a4: win_msg->m_cubParam = sizeof(struct winHTML_FileOpenDialog_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_FileOpenDialog_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001c11a9: win_msg->m_cubParam = sizeof(struct winHTML_NewWindow_t_28); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_NewWindow_t_28(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000811aa: win_msg->m_cubParam = sizeof(struct winHTML_SetCursor_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_SetCursor_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000811ab: win_msg->m_cubParam = sizeof(struct winHTML_StatusText_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_StatusText_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000811ac: win_msg->m_cubParam = sizeof(struct winHTML_ShowToolTip_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_ShowToolTip_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000811ad: win_msg->m_cubParam = sizeof(struct winHTML_UpdateToolTip_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_UpdateToolTip_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000411ae: win_msg->m_cubParam = sizeof(struct winHTML_HideToolTip_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_HideToolTip_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000811af: win_msg->m_cubParam = sizeof(struct winHTML_BrowserRestarted_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_BrowserRestarted_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0008125c: win_msg->m_cubParam = sizeof(struct winSteamInventoryResultReady_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamInventoryResultReady_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0004125d: win_msg->m_cubParam = sizeof(struct winSteamInventoryFullUpdate_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamInventoryFullUpdate_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0001125e: win_msg->m_cubParam = sizeof(struct winSteamInventoryDefinitionUpdate_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamInventoryDefinitionUpdate_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0014125f: win_msg->m_cubParam = sizeof(struct winSteamInventoryEligiblePromoItemDefIDs_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamInventoryEligiblePromoItemDefIDs_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00141260: win_msg->m_cubParam = sizeof(struct winSteamInventoryStartPurchaseResult_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamInventoryStartPurchaseResult_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00081261: win_msg->m_cubParam = sizeof(struct winSteamInventoryRequestPricesResult_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamInventoryRequestPricesResult_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000111fc: win_msg->m_cubParam = sizeof(struct winBroadcastUploadStart_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_BroadcastUploadStart_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000411fd: win_msg->m_cubParam = sizeof(struct winBroadcastUploadStop_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_BroadcastUploadStop_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x01081203: win_msg->m_cubParam = sizeof(struct winGetVideoURLResult_t_264); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GetVideoURLResult_t_264(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00081210: win_msg->m_cubParam = sizeof(struct winGetOPFSettingsResult_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GetOPFSettingsResult_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00011389: win_msg->m_cubParam = sizeof(struct winSteamParentalSettingsChanged_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamParentalSettingsChanged_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001000c9: win_msg->m_cubParam = sizeof(struct winGSClientApprove_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSClientApprove_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x008c00ca: win_msg->m_cubParam = sizeof(struct winGSClientDeny_t_140); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSClientDeny_t_140(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c00cb: win_msg->m_cubParam = sizeof(struct winGSClientKick_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSClientKick_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x008c00ce: win_msg->m_cubParam = sizeof(struct winGSClientAchievementStatus_t_140); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSClientAchievementStatus_t_140(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00010073: win_msg->m_cubParam = sizeof(struct winGSPolicyResponse_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSPolicyResponse_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001000cf: win_msg->m_cubParam = sizeof(struct winGSGameplayStats_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSGameplayStats_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001200d0: win_msg->m_cubParam = sizeof(struct winGSClientGroupStatus_t_18); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSClientGroupStatus_t_18(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x002000d1: win_msg->m_cubParam = sizeof(struct winGSReputation_t_32); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSReputation_t_32(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000400d2: win_msg->m_cubParam = sizeof(struct winAssociateWithClanResult_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_AssociateWithClanResult_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001800d3: win_msg->m_cubParam = sizeof(struct winComputeNewPlayerCompatibilityResult_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_ComputeNewPlayerCompatibilityResult_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0708: win_msg->m_cubParam = sizeof(struct winGSStatsReceived_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSStatsReceived_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0709: win_msg->m_cubParam = sizeof(struct winGSStatsStored_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSStatsStored_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000406a5: win_msg->m_cubParam = sizeof(struct winGCMessageAvailable_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GCMessageAvailable_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000106a6: win_msg->m_cubParam = sizeof(struct winGCMessageFailed_t_1); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GCMessageFailed_t_1(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001809c5: win_msg->m_cubParam = sizeof(struct winSteamUnifiedMessagesSendMethodResult_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamUnifiedMessagesSendMethodResult_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00080d4c: win_msg->m_cubParam = sizeof(struct winSubmitItemUpdateResult_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SubmitItemUpdateResult_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0008051a: win_msg->m_cubParam = sizeof(struct winRemoteStorageConflictResolution_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageConflictResolution_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000802bf: win_msg->m_cubParam = sizeof(struct winSteamAPICallCompleted_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamAPICallCompleted_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x004803f5: win_msg->m_cubParam = sizeof(struct winAppProofOfPurchaseKeyResponse_t_72); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_AppProofOfPurchaseKeyResponse_t_72(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040066: win_msg->m_cubParam = sizeof(struct winSteamServerConnectFailure_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamServerConnectFailure_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00140835: win_msg->m_cubParam = sizeof(struct winHTTPRequestCompleted_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTTPRequestCompleted_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001011a5: win_msg->m_cubParam = sizeof(struct winHTML_ComboNeedsPaint_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_ComboNeedsPaint_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000411a6: win_msg->m_cubParam = sizeof(struct winHTML_ShowPopup_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_ShowPopup_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000411a7: win_msg->m_cubParam = sizeof(struct winHTML_HidePopup_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_HidePopup_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001411a8: win_msg->m_cubParam = sizeof(struct winHTML_SizePopup_t_20); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_SizePopup_t_20(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001811a9: win_msg->m_cubParam = sizeof(struct winHTML_NewWindow_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_HTML_NewWindow_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001801f6: win_msg->m_cubParam = sizeof(struct winFavoritesListChanged_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_FavoritesListChanged_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c051b: win_msg->m_cubParam = sizeof(struct winRemoteStorageFileShareResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageFileShareResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x26200d4a: win_msg->m_cubParam = sizeof(struct winSteamUGCRequestUGCDetailsResult_t_9760); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_SteamUGCRequestUGCDetailsResult_t_9760(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c008f: win_msg->m_cubParam = sizeof(struct winValidateAuthTicketResponse_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_ValidateAuthTicketResponse_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x26100526: win_msg->m_cubParam = sizeof(struct winRemoteStorageGetPublishedFileDetailsResult_t_9744); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageGetPublishedFileDetailsResult_t_9744(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000800c9: win_msg->m_cubParam = sizeof(struct winGSClientApprove_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_GSClientApprove_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c051d: win_msg->m_cubParam = sizeof(struct winRemoteStoragePublishFileResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStoragePublishFileResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c0524: win_msg->m_cubParam = sizeof(struct winRemoteStorageUpdatePublishedFileResult_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageUpdatePublishedFileResult_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x02640527: win_msg->m_cubParam = sizeof(struct winRemoteStorageEnumerateWorkshopFilesResult_t_612); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageEnumerateWorkshopFilesResult_t_612(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040521: win_msg->m_cubParam = sizeof(struct winRemoteStorageSubscribePublishedFileResult_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageSubscribePublishedFileResult_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00040523: win_msg->m_cubParam = sizeof(struct winRemoteStorageUnsubscribePublishedFileResult_t_4); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageUnsubscribePublishedFileResult_t_4(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x250c0526: win_msg->m_cubParam = sizeof(struct winRemoteStorageGetPublishedFileDetailsResult_t_9484); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageGetPublishedFileDetailsResult_t_9484(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001000d3: win_msg->m_cubParam = sizeof(struct winComputeNewPlayerCompatibilityResult_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_ComputeNewPlayerCompatibilityResult_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x06c4051e: win_msg->m_cubParam = sizeof(struct winRemoteStorageGetPublishedFileDetailsResult_t_1732); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageGetPublishedFileDetailsResult_t_1732(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00080152: win_msg->m_cubParam = sizeof(struct winNameHistoryResponse_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_NameHistoryResponse_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x0020051c: win_msg->m_cubParam = sizeof(struct winRemoteStorageDownloadUGCResult_t_32); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RemoteStorageDownloadUGCResult_t_32(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001001f7: win_msg->m_cubParam = sizeof(struct winLobbyInvite_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyInvite_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x001001f9: win_msg->m_cubParam = sizeof(struct winLobbyDataUpdate_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyDataUpdate_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000801ff: win_msg->m_cubParam = sizeof(struct winLobbyClosing_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyClosing_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00100200: win_msg->m_cubParam = sizeof(struct winLobbyKicked_t_16); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_LobbyKicked_t_16(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x00180202: win_msg->m_cubParam = sizeof(struct winRequestFriendsLobbiesResponse_t_24); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_RequestFriendsLobbiesResponse_t_24(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000c044d: win_msg->m_cubParam = sizeof(struct winUserStatsReceived_t_12); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_UserStatsReceived_t_12(lin_msg.m_pubParam, win_msg->m_pubParam); break;
case 0x000803e9: win_msg->m_cubParam = sizeof(struct winAppDataChanged_t_8); win_msg->m_pubParam = HeapAlloc(GetProcessHeap(), 0, win_msg->m_cubParam); cb_AppDataChanged_t_8(lin_msg.m_pubParam, win_msg->m_pubParam); break;
